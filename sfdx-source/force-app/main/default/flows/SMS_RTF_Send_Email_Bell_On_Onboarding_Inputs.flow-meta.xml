<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>LEM-15358: Email Alert Action sends email to Opportunity Team Members associated to Opportunity.</description>
        <name>emailAlert</name>
        <label>emailAlert</label>
        <locationX>50</locationX>
        <locationY>3371</locationY>
        <actionName>Opportunity.Send_Email_to_Sales_Opportunity_Team_to_Use_Onboarding_Inputs</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>sendCustomNotification</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Log_Failure</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.SBQQ__Order__r.SBQQ__Quote__r.SBQQ__Opportunity2__c</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>LEM-15358: It sends notification to Opportunity Owner when Quote gets Contract Signed.</description>
        <name>sendCustomNotification</name>
        <label>sendCustomNotification</label>
        <locationX>50</locationX>
        <locationY>3479</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <faultConnector>
            <targetReference>Log_Failure_SMB</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotificationType.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>notificationRecipientIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Alert: Contract Signed: Ready to Onboard Mx</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>customNotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>getOpportunityDetails.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <description>LEM-15358: It stores Account Team Member&apos;s User Id.</description>
        <name>assignAccountTeamMemberUserId</name>
        <label>assignAccountTeamMemberUserId</label>
        <locationX>622</locationX>
        <locationY>1655</locationY>
        <assignmentItems>
            <assignToReference>notificationRecipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forEachAccountTeamMember.UserId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>forEachAccountTeamMember</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-15358: It stores Opportunity Team Member&apos;s User Id.</description>
        <name>assignOpportunityTeamMemberUserId</name>
        <label>assignOpportunityTeamMemberUserId</label>
        <locationX>622</locationX>
        <locationY>2063</locationY>
        <assignmentItems>
            <assignToReference>notificationRecipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forEachOpportunityTeamMember.UserId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>forEachOpportunityTeamMember</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-15358: It stores package related to product for each Quote Line.</description>
        <name>assignProductPackage</name>
        <label>assignProductPackage</label>
        <locationX>294</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>productPackageDetails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forEachQuoteLine.Package__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>forEachQuoteLine</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-15358: It stores package related to product for each Quote Line.</description>
        <name>assignProductPackage_by_Amended_QLI</name>
        <label>assignProductPackage by Amended QLI</label>
        <locationX>862</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>productPackageDetails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Iterate_over_Amended_Quote_Lines.SBQQ__RequiredBy__r.SBQQ__ProductFamily__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_over_Amended_Quote_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Remove_Inactive_Id</name>
        <label>Remove Inactive Id</label>
        <locationX>798</locationX>
        <locationY>2687</locationY>
        <assignmentItems>
            <assignToReference>notificationRecipientIds</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>for_each_active_users.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>for_each_active_users</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-15358: It stores Opportunity Owner ID.</description>
        <name>setOpportunityOwner</name>
        <label>setOpportunityOwner</label>
        <locationX>534</locationX>
        <locationY>2255</locationY>
        <assignmentItems>
            <assignToReference>notificationRecipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getOpportunityDetails.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>notificationRecipientIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getOpportunityDetails.Account.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getActiveUsers</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <description>LEM-15358: It filters Amended Quote Lines by Is_It_A_New_Product, Package, Split Category.</description>
        <name>Amended_Quote_Lines</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Amended Quote Lines</label>
        <locationX>598</locationX>
        <locationY>647</locationY>
        <assignNextValueToReference>currentItem_Amended_Quote_Lines</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>getQuoteLines</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_Amended_Quote_Lines.Package__c</leftValueReference>
            <operator>IsNull</operator>
            <rightValue>
                <booleanValue>false</booleanValue>
            </rightValue>
        </conditions>
        <conditions>
            <leftValueReference>currentItem_Amended_Quote_Lines.Split_Category__c</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <stringValue>Core</stringValue>
            </rightValue>
        </conditions>
        <conditions>
            <leftValueReference>currentItem_Amended_Quote_Lines.Is_It_A_New_Product__c</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <booleanValue>true</booleanValue>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Iterate_over_Amended_Quote_Lines</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <description>LEM-23498: It checks Quote Type.</description>
        <name>Check_Quote_Type</name>
        <label>Check Quote Type</label>
        <locationX>534</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>New_Quote</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SBQQ__Order__r.SBQQ__Quote__r.SBQQ__Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quote</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>forEachQuoteLine</targetReference>
            </connector>
            <label>New Quote</label>
        </rules>
        <rules>
            <name>Amendment_Quote</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SBQQ__Order__r.SBQQ__Quote__r.SBQQ__Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Amendment</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Amended_Quote_Lines</targetReference>
            </connector>
            <label>Amendment Quote</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-15358: It checks whether recipient Ids exists.</description>
        <name>Does_Recipients_Exists</name>
        <label>Does Recipients Exists?</label>
        <locationX>534</locationX>
        <locationY>2963</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Recipient_Ids_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>notificationRecipientIds</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>notificationRecipientIds</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>isOpportunityEligibleForEmailNotification</targetReference>
            </connector>
            <label>Recipient Ids Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-15358: It checks whether the current Quote Line&apos;s Split Category is Core or A&amp;P.</description>
        <name>Is_Core_OR_A_P</name>
        <label>Is Core OR A&amp;P?</label>
        <locationX>426</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>forEachQuoteLine</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>A&amp;P</defaultConnectorLabel>
        <rules>
            <name>Core_Quote</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>forEachQuoteLine.Split_Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Core</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assignProductPackage</targetReference>
            </connector>
            <label>Core</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-15358: It checks whether Product Family is already added to the productPackageDetails collection.</description>
        <name>Is_Product_Family_Added</name>
        <label>Is Product Family Added?</label>
        <locationX>774</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>assignProductPackage_by_Amended_QLI</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>New Product Family</defaultConnectorLabel>
        <rules>
            <name>Existing_Product_Family</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>productPackageDetails</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Iterate_over_Amended_Quote_Lines.SBQQ__RequiredBy__r.SBQQ__ProductFamily__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Iterate_over_Amended_Quote_Lines</targetReference>
            </connector>
            <label>Existing Product Family</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Recipient_Active</name>
        <label>Is Recipient Active ?</label>
        <locationX>710</locationX>
        <locationY>2579</locationY>
        <defaultConnector>
            <targetReference>Remove_Inactive_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Active</defaultConnectorLabel>
        <rules>
            <name>is_Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>notificationRecipientIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>for_each_active_users.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>for_each_active_users</targetReference>
            </connector>
            <label>is Active</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-15358: It check conditions for Email to be triggered on Opportunity and Quote Line.</description>
        <name>isOpportunityEligibleForEmailNotification</name>
        <label>isOpportunityEligibleForEmailNotification</label>
        <locationX>50</locationX>
        <locationY>3071</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>opportunityEligibleForEmailNotification</name>
            <conditionLogic>(((1 AND 2) OR (5 AND 6)) AND 3 AND 4 AND 7)</conditionLogic>
            <conditions>
                <leftValueReference>getOpportunityDetails.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Opportunity_Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Net New Partner</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Account_Segment__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SMB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Source__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Nintex</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Existing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Opportunity_Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New Store Expansion</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>productPackageDetails</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>emailAlert</targetReference>
            </connector>
            <label>opportunityEligibleForEmailNotification</label>
        </rules>
        <rules>
            <name>opportunityEligibeForEmailNotificationOnProductAddition</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND (5 OR 6 OR 7 OR 8)</conditionLogic>
            <conditions>
                <leftValueReference>getOpportunityDetails.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Existing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Opportunity_Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Upgrade</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Account_Segment__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SMB</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOpportunityDetails.Source__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sales</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>productPackageDetails</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Marketplace</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>productPackageDetails</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Storefront</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>productPackageDetails</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Caviar</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>productPackageDetails</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Drive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>emailAlert</targetReference>
            </connector>
            <label>opportunityEligibeForEmailNotificationOnProductAddition</label>
        </rules>
    </decisions>
    <description>LEM-15358: Send Email to Sales Opportunity Team to Use Onboarding Inputs.
LEM-23498: Changed triggering point to Contract update.</description>
    <environments>Default</environments>
    <interviewLabel>SMS-RTF-Send Email/Bell On Onboarding Inputs {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SMB-RTF-Send Email/Bell On Onboarding Inputs</label>
    <loops>
        <name>for_each_active_users</name>
        <label>forEachActiveUsers</label>
        <locationX>534</locationX>
        <locationY>2471</locationY>
        <collectionReference>getActiveUsers</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_Recipient_Active</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Does_Recipients_Exists</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>LEM-15358: It iterates over each Account Team Member associated with Opportunity.&apos;s Account.</description>
        <name>forEachAccountTeamMember</name>
        <label>forEachAccountTeamMember</label>
        <locationX>534</locationX>
        <locationY>1547</locationY>
        <collectionReference>getAccountTeamMembers</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>assignAccountTeamMemberUserId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>getOpportunityTeamMember</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>LEM-15358: It iterates over each Opportunity Team Member associated with Opportunity.</description>
        <name>forEachOpportunityTeamMember</name>
        <label>forEachOpportunityTeamMember</label>
        <locationX>534</locationX>
        <locationY>1955</locationY>
        <collectionReference>getOpportunityTeamMember</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>assignOpportunityTeamMemberUserId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>setOpportunityOwner</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>LEM-15358: It iterates over each Quote Line associated with Quote.</description>
        <name>forEachQuoteLine</name>
        <label>forEachQuoteLine</label>
        <locationX>206</locationX>
        <locationY>647</locationY>
        <collectionReference>getQuoteLines</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_Core_OR_A_P</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>getCustomNotificationType</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>LEM-15358: It iterates over amended quote lines to filter out quote line with true change.</description>
        <name>Iterate_over_Amended_Quote_Lines</name>
        <label>Iterate over Amended Quote Lines</label>
        <locationX>598</locationX>
        <locationY>755</locationY>
        <collectionReference>Amended_Quote_Lines</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_Product_Family_Added</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>getCustomNotificationType</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>It logs the fault message as Log record.</description>
        <name>Log_Failure</name>
        <label>Log Failure</label>
        <locationX>754</locationX>
        <locationY>3479</locationY>
        <inputAssignments>
            <field>Class_Method_Name__c</field>
            <value>
                <elementReference>$Flow.CurrentStage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Class_Name__c</field>
            <value>
                <elementReference>$Flow.InterviewGuid</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Detailed_Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Record_Id__c</field>
            <value>
                <elementReference>$Flow.CurrentRecord</elementReference>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>It logs the fault message as Log record.</description>
        <name>Log_Failure_SMB</name>
        <label>Log Failure SMB</label>
        <locationX>490</locationX>
        <locationY>3587</locationY>
        <inputAssignments>
            <field>Class_Method_Name__c</field>
            <value>
                <elementReference>$Flow.CurrentStage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Class_Name__c</field>
            <value>
                <elementReference>$Flow.InterviewGuid</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Detailed_Message__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Record_Id__c</field>
            <value>
                <elementReference>$Flow.CurrentRecord</elementReference>
            </value>
        </inputAssignments>
        <object>Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>LEM-15358: It fetches all Account Team Member details related to Opportunity&apos;s Account.</description>
        <name>getAccountTeamMembers</name>
        <label>getAccountTeamMembers</label>
        <locationX>534</locationX>
        <locationY>1439</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>forEachAccountTeamMember</targetReference>
        </connector>
        <filterLogic>1 AND ( 2 OR 3 )</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getOpportunityDetails.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Platform AD Rep</stringValue>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Marketplace AD Rep</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountTeamMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getActiveUsers</name>
        <label>getActiveUsers</label>
        <locationX>534</locationX>
        <locationY>2363</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>for_each_active_users</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>notificationRecipientIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-15358: Fetches Custom Notification Type using DeveloperName.</description>
        <name>getCustomNotificationType</name>
        <label>getCustomNotificationType</label>
        <locationX>534</locationX>
        <locationY>1331</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getAccountTeamMembers</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SMS_RTF_Send_Email_Bell_On_Onboarding_Inputs</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-15358: Fetches Opportunity details related to Quote.</description>
        <name>getOpportunityDetails</name>
        <label>getOpportunityDetails</label>
        <locationX>534</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getQuoteLines</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SBQQ__Order__r.SBQQ__Quote__r.SBQQ__Opportunity2__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-15358: It fetches all Opportunity Team Member details related to Opportunity</description>
        <name>getOpportunityTeamMember</name>
        <label>getOpportunityTeamMember</label>
        <locationX>534</locationX>
        <locationY>1847</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>forEachOpportunityTeamMember</targetReference>
        </connector>
        <filterLogic>1 AND ( 2 OR 3 OR 4 OR 5 OR 6 )</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SBQQ__Order__r.SBQQ__Quote__r.SBQQ__Opportunity2__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Partner Manager</stringValue>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pre-Sales Representative</stringValue>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Franchise Representative</stringValue>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Commercial Operations</stringValue>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Merchant Experience Partner</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityTeamMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-15358: Fetches all Quote Line details related to Quote.</description>
        <name>getQuoteLines</name>
        <label>getQuoteLines</label>
        <locationX>534</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Quote_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SBQQ__Quote__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SBQQ__Order__r.SBQQ__Quote__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SBQQ__QuoteLine__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>408</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getOpportunityDetails</targetReference>
        </connector>
        <filterLogic>(1 AND 2) OR 3</filterLogic>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Activated</stringValue>
            </value>
        </filters>
        <filters>
            <field>SBQQ__Order__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Contract</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>customNotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A contract under {!getOpportunityDetails.Account.Name} has been signed by the Mx. Utilize “Onboard SMB Stores” on the contract to initiate onboarding.</text>
    </textTemplates>
    <variables>
        <description>LEM-15358: It stores Amended Quote Line single record.</description>
        <name>currentItem_Amended_Quote_Lines</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>SBQQ__QuoteLine__c</objectType>
    </variables>
    <variables>
        <description>LEM-15358: It stores notification recipient ids.</description>
        <name>notificationRecipientIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>productPackageDetails</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>repNotificationEmailTemplateId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>EmailTemplate</objectType>
    </variables>
</Flow>
