<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Case_Worked_Upon_Email_Alert</name>
        <label>Case Worked Upon Email Alert</label>
        <locationX>622</locationX>
        <locationY>1979</locationY>
        <actionName>Case.Notify_that_the_Case_is_Actively_Worked_Upon</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>MxSx_queue_assigned_Email_Alert</name>
        <label>MxSx queue assigned Email Alert</label>
        <locationX>50</locationX>
        <locationY>1547</locationY>
        <actionName>Case.Send_Email_Notifying_the_Case_is_assigned_to_MxSx_Bulk_Upload_queue</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>OwnerChanged</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>OwnerChanged</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_on_Case_Status_change</name>
        <label>Send Email on Case Status change</label>
        <locationX>754</locationX>
        <locationY>431</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>GetSOQueueRecords</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Record.Requester__r.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>no-reply@doordash.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>CaseStatusChangeEmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CaseStatusChangeEmailTempalte</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>SO_Support_Queue_Email_Alert</name>
        <label>SO Support Queue Email Alert</label>
        <locationX>754</locationX>
        <locationY>1547</locationY>
        <actionName>Case.Send_Email_Notifying_the_Case_is_assigned_to_SO_Support_queue</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>OwnerChanged</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>OwnerChanged</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assign_MxSx_Queue_Id_value</name>
        <label>Assign MxSx Queue Id value</label>
        <locationX>974</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>MxSxQueueId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Queue_Records_Loop.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Queue_Records_Loop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_SO_Support_Queue_Id_value</name>
        <label>Assign SO Support Queue Id value</label>
        <locationX>1238</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>SOSupportQueueId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Queue_Records_Loop.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Queue_Records_Loop</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>LEM-12809: It checks whether there are members in &quot;MxSx - Bulk Upload Request&quot; queue.</description>
        <name>Are_Group_Members_found_in_Mx_Sx_Queue</name>
        <label>Are Group Members found in Mx Sx Queue?</label>
        <locationX>314</locationX>
        <locationY>1439</locationY>
        <defaultConnector>
            <targetReference>OwnerChanged</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Found in Mx Sx Queue</defaultConnectorLabel>
        <rules>
            <name>Found_in_Mx_Sx_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_MxSx_Bulk_Upload_Queue_Members</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MxSx_queue_assigned_Email_Alert</targetReference>
            </connector>
            <label>Found in Mx Sx Queue</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-12809: It checks whether there are members in &quot;SO Support&quot; queue.</description>
        <name>Are_Group_Members_found_in_SO_Support_Queue</name>
        <label>Are Group Members found in SO Support Queue?</label>
        <locationX>1018</locationX>
        <locationY>1439</locationY>
        <defaultConnector>
            <targetReference>OwnerChanged</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Found in SO Support Queue</defaultConnectorLabel>
        <rules>
            <name>Found_in_SO_Support_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_SO_Support_Queue_Members</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SO_Support_Queue_Email_Alert</targetReference>
            </connector>
            <label>Found in SO Support Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_MxSx_bulk_upload_or_So_Support_queue</name>
        <label>Is MxSx bulk upload or So Support queue</label>
        <locationX>1238</locationX>
        <locationY>839</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MxSx_Bulk_Upload_Request_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Queue_Records_Loop.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.MxSx_Bulk_Upload_Requests_Queue_Name</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_MxSx_Queue_Id_value</targetReference>
            </connector>
            <label>MxSx Bulk Upload Request Queue</label>
        </rules>
        <rules>
            <name>SO_Support_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Queue_Records_Loop.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.S_O_Support_Queue_Name</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_SO_Support_Queue_Id_value</targetReference>
            </connector>
            <label>SO Support Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>OwnerChanged</name>
        <label>OwnerChanged</label>
        <locationX>886</locationX>
        <locationY>1871</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CaseownerIschanged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Requester__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Worked_Upon_Email_Alert</targetReference>
            </connector>
            <label>CaseownerIschanged</label>
        </rules>
    </decisions>
    <decisions>
        <name>SOQueueAssigned</name>
        <label>SOQueueAssigned</label>
        <locationX>886</locationX>
        <locationY>1223</locationY>
        <defaultConnector>
            <targetReference>OwnerChanged</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Owner is changed</defaultConnectorLabel>
        <rules>
            <name>MxSx_Bulk_Upload_Requests_Queue_Assigned</name>
            <conditionLogic>(1 AND 2) OR (1 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>MxSxQueueId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_MxSx_Bulk_Upload_Queue_Members</targetReference>
            </connector>
            <label>MxSx-Bulk Upload Requests Queue Assigned</label>
        </rules>
        <rules>
            <name>SO_Support_Queue_Assigned</name>
            <conditionLogic>(1 AND 2) OR (1 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>SOSupportQueueId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_SO_Support_Queue_Members</targetReference>
            </connector>
            <label>SO Support Queue Assigned</label>
        </rules>
    </decisions>
    <decisions>
        <name>SOQueueAssignedOrCaseIsWorkedUpon</name>
        <label>SOQueueAssignedOrCaseIsWorkedUpon</label>
        <locationX>886</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>GetSOQueueRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Owner is Changed or SO Queue assigned</defaultConnectorLabel>
        <rules>
            <name>Case_Status_changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Requester__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_on_Case_Status_change</targetReference>
            </connector>
            <label>Case Status changed</label>
        </rules>
    </decisions>
    <description>LEM-6640, LEM-8970, LEM-12809: Sends out Email on Case Owner and status change.</description>
    <environments>Default</environments>
    <formulas>
        <name>detailLink</name>
        <dataType>String</dataType>
        <expression>LEFT($Api.Enterprise_Server_URL_510, FIND( &apos;/services&apos;,
    $Api.Enterprise_Server_URL_510)) &amp;
    {!$Record.Id}</expression>
    </formulas>
    <interviewLabel>LEM-6640: Sends out Email on Case Owner and status change {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send Email on the Case status or the owner change</label>
    <loops>
        <name>Queue_Records_Loop</name>
        <label>Queue Records Loop</label>
        <locationX>886</locationX>
        <locationY>731</locationY>
        <collectionReference>GetSOQueueRecords</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_MxSx_bulk_upload_or_So_Support_queue</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SOQueueAssigned</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>LEM-12809: It fetches the members added in &quot;MxSx - Bulk Upload Requests&quot; queue.</description>
        <name>Get_MxSx_Bulk_Upload_Queue_Members</name>
        <label>Get MxSx Bulk Upload Queue Members</label>
        <locationX>314</locationX>
        <locationY>1331</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Are_Group_Members_found_in_Mx_Sx_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>MxSxQueueId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-12809: It fetches the members added in &quot;SO Support&quot; queue.</description>
        <name>Get_SO_Support_Queue_Members</name>
        <label>Get SO Support Queue Members</label>
        <locationX>1018</locationX>
        <locationY>1331</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Are_Group_Members_found_in_SO_Support_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SOSupportQueueId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetSOQueueRecords</name>
        <label>GetSOQueueRecords</label>
        <locationX>886</locationX>
        <locationY>623</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Queue_Records_Loop</targetReference>
        </connector>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.MxSx_Bulk_Upload_Requests_Queue_Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.S_O_Support_Queue_Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>760</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>SOQueueAssignedOrCaseIsWorkedUpon</targetReference>
        </connector>
        <filterFormula>AND(
            NOT({!$Permission.Bypass_Case_Flows}),
            OR(
            BEGINS({!$Record.OwnerId}, &quot;00G&quot;),
            ISCHANGED({!$Record.Status}),
            ISCHANGED({!$Record.OwnerId})
            )
        )</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>CaseStatusChangeEmailSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Updates to Case Number {!$Record.CaseNumber} Status</text>
    </textTemplates>
    <textTemplates>
        <name>CaseStatusChangeEmailTempalte</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;p&gt;Hello,&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;This is a notification that the case status has been updated from Previous Case Status: {!$Record__Prior.Status} to New Case Status: {!$Record.Status}. Here are the details:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Account Name: {!$Record.Account.Name}&lt;/p&gt;&lt;p&gt;Link to Case: &lt;a href=&quot;{!detailLink}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!$Record.CaseNumber}&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Case Owner: {!$Record.Owner:User.FirstName} {!$Record.Owner:User.LastName} {!$Record.Owner:Group.Name}&lt;/p&gt;&lt;p&gt;Case Status: {!$Record.Status}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;—The DoorDash Team&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>MxSxQueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SOSupportQueueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
