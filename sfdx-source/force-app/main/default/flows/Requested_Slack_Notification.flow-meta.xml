<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>LEM-15061: Slack Notification for Redlining Approval.</description>
        <name>Redlining_Request_Slack_Notification</name>
        <label>Redlining Request Slack Notification</label>
        <locationX>132</locationX>
        <locationY>600</locationY>
        <actionName>custom__Approval_Request_Slack_Notification</actionName>
        <actionType>sendNotification</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>custom__Approval_Request_Slack_Notification</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>LEM-13987: Sends the Slack Notification to the requested user along with the related record.</description>
        <name>Requested_Slack_Notification</name>
        <label>Requested Slack Notification</label>
        <locationX>836</locationX>
        <locationY>1392</locationY>
        <actionName>custom__Approval_Request_Slack_Notification</actionName>
        <actionType>sendNotification</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>custom__Approval_Request_Slack_Notification</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <description>LEM-13987: Retrieves the Record Id of the record which is to be sent for approval.</description>
        <name>Approval_Record_Id</name>
        <label>Approval Record Id</label>
        <locationX>836</locationX>
        <locationY>1284</locationY>
        <assignmentItems>
            <assignToReference>ApprovalId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Requested_Slack_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-13987: Stores the Id of the assigned approver.</description>
        <name>IndividualUserId</name>
        <label>IndividualUserId</label>
        <locationX>396</locationX>
        <locationY>492</locationY>
        <assignmentItems>
            <assignToReference>UserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.sbaa__AssignedTo__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Approval_Record_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-1506: Used to Store Manager Id.</description>
        <name>User_Manager</name>
        <label>User Manager</label>
        <locationX>132</locationX>
        <locationY>492</locationY>
        <assignmentItems>
            <assignToReference>UserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_User_Manager.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Redlining_Request_Slack_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>LEM-13987: It stores the User id&apos;s of each User of the Group.</description>
        <name>UserIds</name>
        <label>UserIds</label>
        <locationX>1100</locationX>
        <locationY>924</locationY>
        <assignmentItems>
            <assignToReference>UserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Users.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Users</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>LEM-13987: Checks if the Approval Request has an individual Approver associated or a Group of users.</description>
        <name>Assigned_User_Group</name>
        <label>Assigned User/Group</label>
        <locationX>836</locationX>
        <locationY>384</locationY>
        <defaultConnector>
            <targetReference>Approval_Record_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assigned_as_Individual</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.sbaa__Approver__r.sbaa__User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.sbaa__Approver__r.sbaa__GroupId__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.sbaa__Approver__r.sbaa__User__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IndividualUserId</targetReference>
            </connector>
            <label>Assigned as Individual?</label>
        </rules>
        <rules>
            <name>Assigned_as_group</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.sbaa__Approver__r.sbaa__User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.sbaa__Approver__r.sbaa__GroupId__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Group_Members</targetReference>
            </connector>
            <label>Assigned as group</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-13987: Check if the user in the group is Active.</description>
        <name>Check_user_Active</name>
        <label>Check user Active?</label>
        <locationX>1232</locationX>
        <locationY>816</locationY>
        <defaultConnector>
            <targetReference>Users</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserIds</targetReference>
            </connector>
            <label>Active</label>
        </rules>
    </decisions>
    <decisions>
        <description>LEM-15061: Check if Redlining Approval for triggering Redlining Slack Notification.</description>
        <name>Redlining_Dynamic_Approval</name>
        <label>Redlining Dynamic Approval</label>
        <locationX>484</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>Assigned_User_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Redlining_Approval</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.sbaa__Rule__r.sbaa__ApproverField__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_Manager</targetReference>
            </connector>
            <label>Redlining Approval</label>
        </rules>
    </decisions>
    <description>LEM-13987: Send a Slack Notification when a Quote is Submitted for Approval.</description>
    <environments>Default</environments>
    <interviewLabel>Requested Slack Notification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Requested Slack Notification</label>
    <loops>
        <description>LEM-13987: Loops through all the Users associated with the Public group</description>
        <name>Users</name>
        <label>Users</label>
        <locationX>1012</locationX>
        <locationY>600</locationY>
        <collectionReference>Get_Group_Members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_User_Record</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Approval_Record_Id</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>LEM-13987: Stores the Users present in the Public Group.</description>
        <name>Get_Group_Members</name>
        <label>Get Group Members</label>
        <locationX>1012</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Users</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.sbaa__Approver__r.sbaa__GroupId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-15061: Used to get the Manager Id of Quote&apos;s Owner.</description>
        <name>Get_User_Manager</name>
        <label>Get User Manager</label>
        <locationX>132</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>User_Manager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AQS_Quote__r.Users_Manager_Id__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>LEM-13987: Stores the User record present in the Public Group.</description>
        <name>Get_User_Record</name>
        <label>Get User Record</label>
        <locationX>1232</locationX>
        <locationY>708</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_user_Active</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Users.UserOrGroupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>or</filterLogic>
        <filters>
            <field>sbaa__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Requested</stringValue>
            </value>
        </filters>
        <filters>
            <field>sbaa__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Assigned</stringValue>
            </value>
        </filters>
        <object>sbaa__Approval__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Redlining_Dynamic_Approval</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>ApprovalId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>LEM-13987: Retrieves the Id of the User to whom the Approval is to be sent.</description>
        <name>UserId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
